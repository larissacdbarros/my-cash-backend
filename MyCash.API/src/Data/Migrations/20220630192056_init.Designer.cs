// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using src.Data;

namespace MyCash.API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220630192056_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyCash.API.Models.CategoriaConta", b =>
                {
                    b.Property<int>("CategoriaContaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaContaId");

                    b.ToTable("CategoriasContas");
                });

            modelBuilder.Entity("src.Models.Banco", b =>
                {
                    b.Property<int>("BancoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BancoId");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("src.Models.CategoriaDespesa", b =>
                {
                    b.Property<int>("CategoriaDespesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaDespesaId");

                    b.ToTable("CategoriasDespesas");
                });

            modelBuilder.Entity("src.Models.CategoriaReceita", b =>
                {
                    b.Property<int>("CategoriaReceitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaReceitaId");

                    b.ToTable("CategoriasReceitas");
                });

            modelBuilder.Entity("src.Models.Conta", b =>
                {
                    b.Property<int>("ContaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaContaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SaldoAtual")
                        .HasColumnType("float");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("ContaId");

                    b.HasIndex("BancoId");

                    b.HasIndex("CategoriaContaId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("src.Models.DespesaCartao", b =>
                {
                    b.Property<int>("DespesaCartaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FaturaId")
                        .HasColumnType("int");

                    b.Property<int>("SubcategoriaDespesaId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("DespesaCartaoId");

                    b.HasIndex("FaturaId");

                    b.HasIndex("SubcategoriaDespesaId");

                    b.ToTable("DespesasCartao");
                });

            modelBuilder.Entity("src.Models.DespesaConta", b =>
                {
                    b.Property<int>("DespesaContaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubcategoriaDespesaId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("DespesaContaId");

                    b.HasIndex("ContaId");

                    b.HasIndex("SubcategoriaDespesaId");

                    b.ToTable("DespesasConta");
                });

            modelBuilder.Entity("src.Models.Fatura", b =>
                {
                    b.Property<int>("FaturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFechamentoFatura")
                        .HasColumnType("Date");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<double>("ValorFatura")
                        .HasColumnType("float");

                    b.Property<bool>("isFaturaFechada")
                        .HasColumnType("bit");

                    b.Property<bool>("isFaturaPaga")
                        .HasColumnType("bit");

                    b.HasKey("FaturaId");

                    b.HasIndex("ContaId");

                    b.ToTable("Faturas");
                });

            modelBuilder.Entity("src.Models.Receita", b =>
                {
                    b.Property<int>("ReceitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubcategoriaReceitaId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("ReceitaId");

                    b.HasIndex("ContaId");

                    b.HasIndex("SubcategoriaReceitaId");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("src.Models.SubcategoriaDespesa", b =>
                {
                    b.Property<int>("SubcategoriaDespesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaDespesaId")
                        .HasColumnType("int");

                    b.Property<string>("Icone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubcategoriaDespesaId");

                    b.HasIndex("CategoriaDespesaId");

                    b.ToTable("SubcategoriasDespesas");
                });

            modelBuilder.Entity("src.Models.SubcategoriaReceita", b =>
                {
                    b.Property<int>("SubcategoriaReceitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaReceitaId")
                        .HasColumnType("int");

                    b.Property<string>("Icone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubcategoriaReceitaId");

                    b.HasIndex("CategoriaReceitaId");

                    b.ToTable("SubcategoriasReceitas");
                });

            modelBuilder.Entity("src.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("src.Models.Conta", b =>
                {
                    b.HasOne("src.Models.Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCash.API.Models.CategoriaConta", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("src.Models.Usuario", "Usuario")
                        .WithOne("Contas")
                        .HasForeignKey("src.Models.Conta", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("src.Models.DespesaCartao", b =>
                {
                    b.HasOne("src.Models.Fatura", "Fatura")
                        .WithMany("DespesasCartao")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("src.Models.SubcategoriaDespesa", "SubcategoriaDespesa")
                        .WithMany()
                        .HasForeignKey("SubcategoriaDespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fatura");

                    b.Navigation("SubcategoriaDespesa");
                });

            modelBuilder.Entity("src.Models.DespesaConta", b =>
                {
                    b.HasOne("src.Models.Conta", "Conta")
                        .WithMany("DespesasConta")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("src.Models.SubcategoriaDespesa", "SubcategoriaDespesa")
                        .WithMany()
                        .HasForeignKey("SubcategoriaDespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("SubcategoriaDespesa");
                });

            modelBuilder.Entity("src.Models.Fatura", b =>
                {
                    b.HasOne("src.Models.Conta", "Conta")
                        .WithMany("Faturas")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("src.Models.Receita", b =>
                {
                    b.HasOne("src.Models.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("src.Models.SubcategoriaReceita", "SubcategoriaReceita")
                        .WithMany()
                        .HasForeignKey("SubcategoriaReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("SubcategoriaReceita");
                });

            modelBuilder.Entity("src.Models.SubcategoriaDespesa", b =>
                {
                    b.HasOne("src.Models.CategoriaDespesa", "CategoriaDespesa")
                        .WithMany("SubcategoriasDespesa")
                        .HasForeignKey("CategoriaDespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaDespesa");
                });

            modelBuilder.Entity("src.Models.SubcategoriaReceita", b =>
                {
                    b.HasOne("src.Models.CategoriaReceita", "CategoriaReceita")
                        .WithMany("SubcategoriasReceita")
                        .HasForeignKey("CategoriaReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaReceita");
                });

            modelBuilder.Entity("src.Models.CategoriaDespesa", b =>
                {
                    b.Navigation("SubcategoriasDespesa");
                });

            modelBuilder.Entity("src.Models.CategoriaReceita", b =>
                {
                    b.Navigation("SubcategoriasReceita");
                });

            modelBuilder.Entity("src.Models.Conta", b =>
                {
                    b.Navigation("DespesasConta");

                    b.Navigation("Faturas");
                });

            modelBuilder.Entity("src.Models.Fatura", b =>
                {
                    b.Navigation("DespesasCartao");
                });

            modelBuilder.Entity("src.Models.Usuario", b =>
                {
                    b.Navigation("Contas");
                });
#pragma warning restore 612, 618
        }
    }
}
